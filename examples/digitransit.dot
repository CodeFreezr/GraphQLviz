digraph "digitransit" {
graph[dpi=100, rankdir=LR, label="digitransit"]
node[shape=none, margin=0]
"QueryType"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>QueryType</B><BR></BR></FONT></TD></TR></TABLE>>]
"Node"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>Node</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">id: ID!</TD></TR></TABLE>>]
"Agency"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>Agency</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">id: ID!</TD></TR><TR><TD ALIGN="left" BORDER="0">gtfsId: String!</TD></TR><TR><TD ALIGN="left" BORDER="0">name: String!</TD></TR><TR><TD ALIGN="left" BORDER="0">url: String!</TD></TR><TR><TD ALIGN="left" BORDER="0">timezone: String!</TD></TR><TR><TD ALIGN="left" BORDER="0">lang: String</TD></TR><TR><TD ALIGN="left" BORDER="0">phone: String</TD></TR><TR><TD ALIGN="left" BORDER="0">fareUrl: String</TD></TR></TABLE>>]
"Route"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>Route</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">id: ID!</TD></TR><TR><TD ALIGN="left" BORDER="0">gtfsId: String!</TD></TR><TR><TD ALIGN="left" BORDER="0">shortName: String</TD></TR><TR><TD ALIGN="left" BORDER="0">longName: String</TD></TR><TR><TD ALIGN="left" BORDER="0">type: String</TD></TR><TR><TD ALIGN="left" BORDER="0">desc: String</TD></TR><TR><TD ALIGN="left" BORDER="0">url: String</TD></TR><TR><TD ALIGN="left" BORDER="0">color: String</TD></TR><TR><TD ALIGN="left" BORDER="0">textColor: String</TD></TR></TABLE>>]
"BikesAllowed"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>BikesAllowed</B><BR></BR>&laquo;enum&raquo;</FONT></TD></TR><TR><TD ALIGN="left" BORDER="0" COLSPAN="2">NO_INFORMATION</TD></TR><TR><TD ALIGN="left" BORDER="0" COLSPAN="2">ALLOWED</TD></TR><TR><TD ALIGN="left" BORDER="0" COLSPAN="2">NOT_ALLOWED</TD></TR></TABLE>>]
"Pattern"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>Pattern</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">id: ID!</TD></TR><TR><TD ALIGN="left" BORDER="0">directionId: Int</TD></TR><TR><TD ALIGN="left" BORDER="0">name: String</TD></TR><TR><TD ALIGN="left" BORDER="0">code: String!</TD></TR><TR><TD ALIGN="left" BORDER="0">headsign: String</TD></TR><TR><TD ALIGN="left" BORDER="0">semanticHash: String</TD></TR></TABLE>>]
"Trip"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>Trip</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">id: ID!</TD></TR><TR><TD ALIGN="left" BORDER="0">gtfsId: String!</TD></TR><TR><TD ALIGN="left" BORDER="0">serviceId: String</TD></TR><TR><TD ALIGN="left" BORDER="0">tripShortName: String</TD></TR><TR><TD ALIGN="left" BORDER="0">tripHeadsign: String</TD></TR><TR><TD ALIGN="left" BORDER="0">routeShortName: String</TD></TR><TR><TD ALIGN="left" BORDER="0">directionId: String</TD></TR><TR><TD ALIGN="left" BORDER="0">blockId: String</TD></TR><TR><TD ALIGN="left" BORDER="0">shapeId: String</TD></TR><TR><TD ALIGN="left" BORDER="0">geometry: String</TD></TR></TABLE>>]
"WheelchairBoarding"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>WheelchairBoarding</B><BR></BR>&laquo;enum&raquo;</FONT></TD></TR><TR><TD ALIGN="left" BORDER="0" COLSPAN="2">NO_INFORMATION</TD></TR><TR><TD ALIGN="left" BORDER="0" COLSPAN="2">POSSIBLE</TD></TR><TR><TD ALIGN="left" BORDER="0" COLSPAN="2">NOT_POSSIBLE</TD></TR></TABLE>>]
"Stop"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>Stop</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">id: ID!</TD></TR><TR><TD ALIGN="left" BORDER="0">gtfsId: String!</TD></TR><TR><TD ALIGN="left" BORDER="0">name: String!</TD></TR><TR><TD ALIGN="left" BORDER="0">lat: Float!</TD></TR><TR><TD ALIGN="left" BORDER="0">lon: Float!</TD></TR><TR><TD ALIGN="left" BORDER="0">code: String</TD></TR><TR><TD ALIGN="left" BORDER="0">desc: String</TD></TR><TR><TD ALIGN="left" BORDER="0">zoneId: String</TD></TR><TR><TD ALIGN="left" BORDER="0">url: String</TD></TR><TR><TD ALIGN="left" BORDER="0">direction: String</TD></TR><TR><TD ALIGN="left" BORDER="0">timezone: String</TD></TR><TR><TD ALIGN="left" BORDER="0">vehicleType: Int</TD></TR><TR><TD ALIGN="left" BORDER="0">platformCode: String</TD></TR></TABLE>>]
"LocationType"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>LocationType</B><BR></BR>&laquo;enum&raquo;</FONT></TD></TR><TR><TD ALIGN="left" BORDER="0" COLSPAN="2">STOP</TD></TR><TR><TD ALIGN="left" BORDER="0" COLSPAN="2">STATION</TD></TR><TR><TD ALIGN="left" BORDER="0" COLSPAN="2">ENTRANCE</TD></TR></TABLE>>]
"Cluster"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>Cluster</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">id: ID!</TD></TR><TR><TD ALIGN="left" BORDER="0">gtfsId: String!</TD></TR><TR><TD ALIGN="left" BORDER="0">name: String!</TD></TR><TR><TD ALIGN="left" BORDER="0">lat: Float!</TD></TR><TR><TD ALIGN="left" BORDER="0">lon: Float!</TD></TR></TABLE>>]
"stopAtDistance"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>stopAtDistance</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">distance: Int</TD></TR></TABLE>>]
"StoptimesInPattern"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>StoptimesInPattern</B><BR></BR></FONT></TD></TR></TABLE>>]
"Stoptime"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>Stoptime</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">scheduledArrival: Int</TD></TR><TR><TD ALIGN="left" BORDER="0">realtimeArrival: Int</TD></TR><TR><TD ALIGN="left" BORDER="0">arrivalDelay: Int</TD></TR><TR><TD ALIGN="left" BORDER="0">scheduledDeparture: Int</TD></TR><TR><TD ALIGN="left" BORDER="0">realtimeDeparture: Int</TD></TR><TR><TD ALIGN="left" BORDER="0">departureDelay: Int</TD></TR><TR><TD ALIGN="left" BORDER="0">timepoint: Boolean</TD></TR><TR><TD ALIGN="left" BORDER="0">realtime: Boolean</TD></TR><TR><TD ALIGN="left" BORDER="0">serviceDay: Long</TD></TR></TABLE>>]
"Coordinates"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>Coordinates</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">lat: Float</TD></TR><TR><TD ALIGN="left" BORDER="0">lon: Float</TD></TR></TABLE>>]
"stopAtDistanceConnection"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>stopAtDistanceConnection</B><BR></BR></FONT></TD></TR></TABLE>>]
"stopAtDistanceEdge"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>stopAtDistanceEdge</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">cursor: String!</TD></TR></TABLE>>]
"PageInfo"[label=<<TABLE BORDER="1" CELLSPACING="0"><TR><TD BGCOLOR="#E535AB" COLSPAN="2"><FONT COLOR="white"><B>PageInfo</B><BR></BR></FONT></TD></TR><TR><TD ALIGN="left" BORDER="0">hasNextPage: Boolean!</TD></TR><TR><TD ALIGN="left" BORDER="0">hasPreviousPage: Boolean!</TD></TR><TR><TD ALIGN="left" BORDER="0">startCursor: String</TD></TR><TR><TD ALIGN="left" BORDER="0">endCursor: String</TD></TR></TABLE>>]

"QueryType" -> "Node"[label="node(...)", labeltooltip="Fetches an object given its ID"]
"QueryType" -> "Agency"[label="agencies", labeltooltip="Get all agencies for the specified graph"]
"QueryType" -> "Agency"[label="agency(...)", labeltooltip="Get a single agency based on agency ID"]
"QueryType" -> "Stop"[label="stops(...)", labeltooltip="Get all stops for the specified graph"]
"QueryType" -> "Stop"[label="stopsByBbox(...)", labeltooltip="Get all stops within the specified bounding box"]
"QueryType" -> "stopAtDistanceConnection"[label="stopsByRadius(...)", labeltooltip="Get all stops within the specified radius from a location. The returned type has two fields stop and distance"]
"QueryType" -> "Stop"[label="stop(...)", labeltooltip="Get a single stop based on its id (format is Agency\:StopId)"]
"QueryType" -> "Route"[label="routes(...)", labeltooltip="Get all routes for the specified graph"]
"QueryType" -> "Route"[label="route(...)", labeltooltip="Get a single route based on its id (format is Agency\:RouteId)"]
"QueryType" -> "Trip"[label="trips", labeltooltip="Get all trips for the specified graph"]
"QueryType" -> "Trip"[label="trip(...)", labeltooltip="Get a single trip based on its id (format is Agency\:TripId)"]
"QueryType" -> "Trip"[label="fuzzyTrip(...)", labeltooltip=""]
"QueryType" -> "Pattern"[label="patterns", labeltooltip="Get all patterns for the specified graph"]
"QueryType" -> "Pattern"[label="pattern(...)", labeltooltip="Get a single pattern based on its id"]
"QueryType" -> "Cluster"[label="clusters", labeltooltip="Get all clusters for the specified graph"]
"QueryType" -> "Cluster"[label="cluster(...)", labeltooltip="Get a single cluster based on its id"]
"QueryType" -> "QueryType"[label="viewer", labeltooltip="Needed until https\://github.com/facebook/relay/issues/112 is resolved"]
"Agency" -> "Route"[label="routes", labeltooltip=""]
"Route" -> "Agency"[label="agency", labeltooltip=""]
"Route" -> "BikesAllowed"[label="bikesAllowed", labeltooltip=""]
"Route" -> "Pattern"[label="patterns", labeltooltip=""]
"Route" -> "Stop"[label="stops", labeltooltip=""]
"Route" -> "Trip"[label="trips", labeltooltip=""]
"Pattern" -> "Route"[label="route", labeltooltip=""]
"Pattern" -> "Trip"[label="trips", labeltooltip=""]
"Pattern" -> "Stop"[label="stops", labeltooltip=""]
"Pattern" -> "Coordinates"[label="geometry", labeltooltip=""]
"Trip" -> "Route"[label="route", labeltooltip=""]
"Trip" -> "WheelchairBoarding"[label="wheelchairAccessible", labeltooltip=""]
"Trip" -> "BikesAllowed"[label="bikesAllowed", labeltooltip=""]
"Trip" -> "Pattern"[label="pattern", labeltooltip=""]
"Trip" -> "Stop"[label="stops", labeltooltip=""]
"Trip" -> "Stop"[label="semanticHash", labeltooltip=""]
"Trip" -> "Stoptime"[label="stoptimes", labeltooltip=""]
"Trip" -> "Stoptime"[label="stoptimesForDate(...)", labeltooltip=""]
"Stop" -> "LocationType"[label="locationType", labeltooltip=""]
"Stop" -> "Stop"[label="parentStation", labeltooltip=""]
"Stop" -> "WheelchairBoarding"[label="wheelchairBoarding", labeltooltip=""]
"Stop" -> "Cluster"[label="cluster", labeltooltip=""]
"Stop" -> "Route"[label="routes", labeltooltip=""]
"Stop" -> "Pattern"[label="patterns", labeltooltip=""]
"Stop" -> "stopAtDistance"[label="transfers", labeltooltip=""]
"Stop" -> "StoptimesInPattern"[label="stoptimesForServiceDate(...)", labeltooltip=""]
"Stop" -> "StoptimesInPattern"[label="stoptimesForPatterns(...)", labeltooltip=""]
"Stop" -> "Stoptime"[label="stoptimesWithoutPatterns(...)", labeltooltip=""]
"Cluster" -> "Stop"[label="stops", labeltooltip=""]
"stopAtDistance" -> "Stop"[label="stop", labeltooltip=""]
"StoptimesInPattern" -> "Pattern"[label="pattern", labeltooltip=""]
"StoptimesInPattern" -> "Stoptime"[label="stoptimes", labeltooltip=""]
"Stoptime" -> "Stop"[label="stop", labeltooltip=""]
"Stoptime" -> "Trip"[label="trip", labeltooltip=""]
"stopAtDistanceConnection" -> "stopAtDistanceEdge"[label="edges", labeltooltip=""]
"stopAtDistanceConnection" -> "PageInfo"[label="pageInfo", labeltooltip=""]
"stopAtDistanceEdge" -> "stopAtDistance"[label="node", labeltooltip="The item at the end of the edge"]
}
